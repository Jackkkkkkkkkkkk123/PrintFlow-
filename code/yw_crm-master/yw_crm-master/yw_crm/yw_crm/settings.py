"""
Django settings for yw_crm project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rbh7-!dzz2d^h1ghctmz7(a2)7wr!owvv6y$x(hvgr4#*_)%&='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 允许所有IP访问（包括局域网）
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'crm.apps.CrmConfig',
    'rbac.apps.RbacConfig',
    'stark.apps.StarkConfig'
]

MIDDLEWARE = [
    # 'crm.middleware.crm_middleware.XssMiddleware',  # xss攻击，返回内容进行过滤
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'crm.middleware.login_required_middleware.LoginRequiredMiddleware',
    'rbac.middleware.rbac_middleware.PermissionMiddleWare',
]

ROOT_URLCONF = 'yw_crm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'yw_crm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'yw_crm',
        'USER': 'root',
        'PASSWORD': 'wylj99',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)

#############RBAC相关配置
USER_MODEL_PATH='crm.models.UserInfo'
PERMISSION_SESSION_KEY='permission_dict'
MENU_SESSION_KEY='menu_dict'
VALID_URL=[
    '/',
    '/index/',
    '/login/',
    '/reset/',
    '/admin/.*',
    '/verify_code/',
    '/test/',

]

#############发送邮件
# 以下这些配置信息，django会自动读取，使用账号以及授权码进行登录
# 成功之后，就会发送邮件

# 设置邮件域名
EMAIL_HOST = 'smtp.qq.com'

# 设置端口号，端口号是数字
EMAIL_PORT = 25

# 设置发件人的邮箱账号
EMAIL_HOST_USER = '610502705@qq.com'

# 设置发件人的授权码
EMAIL_HOST_PASSWORD = 'kafmsaqpvhfnbega'

#############Django Channels配置
ASGI_APPLICATION = 'yw_crm.asgi.application'

# 通道层配置（使用Redis）
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('127.0.0.1', 6379)],
        },
    },
}

#############OpenAI API配置
# LangChain对话AI功能配置
OPENAI_API_KEY = 'hk-rht2as1000055555695a7d72587851cc0765504d540b8b99'
OPENAI_BASE_URL = 'https://api.openai-hk.com/v1'
OPENAI_MODEL = 'gpt-3.5-turbo'



